#!/bin/bash
# Written by Charles Moye cmoye@digium.com
# Copyright 2012-2016 Charles Moye
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

# fsck-boot.sh
# Find and fsck any ext2/ext3/ext4 volumes. Supports lvm.
# Requires lvm2, e2fsprogs, file
# Must be run as root or have sudo permissions for the current user for:
# e2fsck, vgchange, lvdisplay, fdisk, file

#set -x;

. /usr/local/etc/disk-tools.sh

TRIM_ARGS="-E discard"
TRIM=""
FSCK_ARGS_LONG="-fcck"
FSCK_ARGS_SHORT="-f"
FSCK_ARGS="$FSCK_ARGS_LONG"
AUTOACCEPT=""

fsck_busy_wait() {
  # $1 - volume
  local vol="$1";
  local autoaccept="$2";
  local logit="$LOG_DIR/$(date +%Y%m%d-%H%M)_fsck-output.log";
  if [ ! -z $autoaccept ]; then
    autoaccept='-y';
  fi;
  echo -e "\n\n\nRunning fsck on $TYPE filesystem at $vol";
  local fsck_it="e2fsck $autoaccept $FSCK_ARGS $TRIM $vol";
  script -c "$fsck_it 2>&1" $logit;
}

check_arguments() {
  local i
  AUTOACCEPT="";
  TRIM="";
  for i in $@; do
    case $i in
      short|SHORT|Short)
        FSCK_ARGS="$FSCK_ARGS_SHORT";
        ;;
      yes|YES|Yes)
        AUTOACCEPT="yes";
        ;;
      trim|TRIM|Trim)
        TRIM="$TRIM_ARGS";
        ;;
      *)
        cat<<EOF
$0 usage: $0 [yes] [short] [trim]

Default is to run 'e2fsck -fcck'
    yes      Add '-y' flag to autoaccept all fixes from e2fsck
    short    Use merely '-f' without 'cck' which does a bad block check
    trim     Add '-E discard' to force a Trim operation on an SSD

Examples
    $0 yes; Run 'e2fsck -yfcck'
    $0 short yes; Run 'e2fsck -yf'
    $0 trim; Run 'e2fsck -fcck -E discard' user will approve all actions

EOF
        exit 0
        ;;
    esac
  done
}

checkroot;
check_arguments $@

if [ ! -z "$AUTOACCEPT" ]; then
  echo "Giving time for system to finish bringing up devices...";
  sleep 10
fi;

# Build list of LVM and standard volumes
list_lvm;
list_sdxn;

echo -e "\n\n\nFound these potential volumes: ";
echo $SDX_VOLS $LVM_VOLS;
echo;

for vol in $SDX_VOLS $LVM_VOLS; do
  # Determine the type of the file system.
  filesystem_type $vol;
  # Don't run the check on the swap file system.
  if [ "$FILE_TYPE" != "swap" ] && [ ! -z "$FILE_TYPE" ]; then
    # run the file system check and alert the user.
    fsck_busy_wait $vol "$AUTOACCEPT";
  elif [ "$FILE_TYPE" = "swap" ] && [ ! -z "$FILE_TYPE" ]; then
    echo -e "\n\n\nNo need to check $FILE_TYPE filesystem at $vol, Skipping";
  else
    echo -e "\n\n\nNot checking $FILE_TYPE filesystem at $vol, not supported";
  fi
done;
if [ ! -z $AUTOACCEPT ]; then
  echo -e "\n\n\nPress Enter to reboot. [ctrl + c] to exit."
  read y
  reboot;
fi;

