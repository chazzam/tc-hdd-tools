#!/bin/bash
# Written by Charles Moye cmoye@digium.com
# Copyright 2012-2017 Charles Moye
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

#set -x;
. /usr/local/etc/disk-tools.sh

checkroot;

[ -z "$SITE" ] && load_cmdline;

[ -x /usr/local/etc/init.d/lcdproc ] && /usr/local/etc/init.d/lcdproc start 2>/dev/null

[ -z "$SITE" ] && SITE="DEFAULT"

if [ "$SITE" = "TS" ]; then
  prompt_system
  detect_cards
  prompt_lcd
  fsck-all long yes || exerr "fsck failed to run"
  smart_process || exerr "Smart failed to run";
  run_hdparm || exerr "hdparm failed to run"
elif [ "$SITE" = "SSD" ]; then
  security_erase_walkthrough || exerr "Erase failed to run"
  smart_process || exerr "Smart failed to run";
  run_hdparm || exerr "hdparm failed to run"
elif [ "$SITE" = "HDD" ]; then
  smart_shred || exerr "Smart failed to run"
  run_hdparm || exerr "hdparm failed to run"
  [ -z "$SHRED_RUN" ] && call_shred long
elif [ "$SITE" = "FA" ]; then
  prompt_system
  detect_cards
  prompt_lcd
  smart_shred || exerr "Smart failed to run"
  run_hdparm || exerr "hdparm failed to run"
  network-tests -i "$NETWORK_TEST_SERVER" -o "$L_NETWORK" || exerr "Network Tests failed to run"
  network-tests-stats "$L_NETWORK" || exerr "Network Stats couldn't be collected"
  [ -z "$SHRED_RUN" ] && call_shred long
else
  fsck-all short yes || exerr "fsck failed to run"
fi

# Bundle logs
( cd /tmp;
  tb="$(name_tarball)"
  fl="${LOG_DIR##/tmp/}"
  if [ "$fl" != "${tb%%.tar.gz}" ];then
    fl="${tb%%.tar.gz}"
    mv "${LOG_DIR##/tmp/}" "$fl"
  fi
  tar -czvf "$tb" "$fl"/* && \
    printf "\nLogs bundled in /tmp/%s\n" "$tb" ||\
    printf "\n\nERROR: Failed to bundle logs from:%s into %s" "$LOG_DIR" "$tb"
)
